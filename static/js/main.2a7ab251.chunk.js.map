{"version":3,"sources":["components/BookDisplay.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["BookDisplay","_ref","BASE_URL","tb1","setTb1","useState","tb2","setTb2","tb3","setTb3","title","setTitle","id","setId","subjects","setSubjects","authors","setAuthors","translators","setTranslators","bookshelves","setBookshelves","languages","setLanguages","copyright","setCopyright","media_type","setMedia_type","download_count","setDownload_count","link","setLink","update_book","book","console","log","join","i","length","push","name","format","type","Object","entries","formats","async","fetch_id","response","fetch","res","json","results","alert","useEffect","React","createElement","className","value","onChange","e","target","onClick","Math","floor","random","Header","Popup","trigger","close","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2a7ab251.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nimport \"./BookDisplay.css\";\n\n\nconst BookDisplay = ({ }) => {\n\n    const BASE_URL = \"https://gutendex.com/books?\";\n\n    const[tb1, setTb1] = useState(\"\"); \n    const[tb2, setTb2] = useState(\"\"); \n    const[tb3, setTb3] = useState(\"\"); \n\n    const[title, setTitle] = useState(\"\"); \n    const[id, setId] = useState(\"\"); \n    const[subjects, setSubjects] = useState(\"\"); \n    const[authors, setAuthors] = useState(\"\"); \n    const[translators, setTranslators] = useState(\"\"); \n    const[bookshelves, setBookshelves] = useState(\"\");\n    const[languages, setLanguages] = useState(\"\"); \n    const[copyright, setCopyright] = useState(\"\"); \n    const[media_type, setMedia_type] = useState(\"\"); \n    const[download_count, setDownload_count] = useState(0); \n    const[link, setLink] = useState(\"\"); \n\n    useEffect(() => {\n        fetch_id(1);\n    }, []);\n\n    function update_book(book) {\n        console.log(book);\n        setTitle(book.title);\n        setId(book.id);\n        setSubjects(book.subjects.join(\", \"));\n        let authors = [];\n        for (let i = 0; i < book.authors.length; i++) {\n            authors.push(book.authors[i].name);\n        }\n        setAuthors(authors.join(\",, \"));\n        if (book.translators.length > 0 && typeof(book.translators[0]) === \"object\") {\n            let translators = [];\n            for (let i = 0; i < book.translators.length; i++) {\n                translators.push(book.translators[i].name);\n            }\n            setTranslators(translators.join(\",, \"));\n        } else {\n            setTranslators(book.translators.length === 0 ? \"None\" : book.translators.join(\",, \"));\n        }\n        setBookshelves(book.bookshelves.length === 0 ? \"None\" : book.bookshelves.join(\", \"));\n        setLanguages(book.languages.join(\", \"));\n        setCopyright(book.copyright ? \"Yes\" : \"No\");\n        setMedia_type(book.media_type);\n        setDownload_count(book.download_count);\n        let format = \"\";\n        for (const [type, link] of Object.entries(book.formats)) {\n            format = link;\n            break;\n        }\n        setLink(format);\n    }\n\n    async function fetch_lang() {\n        try {\n            const response = await fetch(BASE_URL + \"languages=\" + tb1);\n            const json = await response.json();\n            let res = json.results;\n            if (res.length === 0) {\n               alert(\"Invalid language code, see https://www.wikiwand.com/en/List_of_ISO_639_language_codes\");\n            } else {\n                update_book(res[Math.floor(Math.random() * res.length)]);\n            }\n            setTb1(\"\");\n        } catch {\n            alert(\"Gutendex API is not responding\");\n        }\n    }\n\n    async function fetch_key() {\n        try {\n            const response = await fetch(BASE_URL + \"search=\" + tb2);\n            const json = await response.json();\n            let res = json.results;\n            if (res.length === 0) {\n               alert(\"No books exist with those keywords\");\n            } else {\n                update_book(res[Math.floor(Math.random() * res.length)]);\n            }\n            setTb2(\"\");\n        } catch {\n            alert(\"Gutendex API is not responding\");\n        }\n    }\n\n    async function fetch_id() {\n        try {\n            const response = await fetch(BASE_URL + \"ids=\" + tb3);\n            const json = await response.json();\n            let res = json.results;\n            if (res.length === 0) {\n               alert(\"No books exist with that ID\");\n            } else {\n                update_book(res[0]);\n            }\n            setTb3(\"\");\n        } catch {\n            alert(\"Gutendex API is not responding\");\n        }\n    }\n\n    async function fetch_lucky() {\n        try {\n            const response = await fetch(BASE_URL);\n            const json = await response.json();\n            let res = json.results;\n            update_book(res[Math.floor(Math.random() * res.length)]);\n            setTb3(\"\");\n        } catch {\n            alert(\"Gutendex API is not responding\");\n        }\n    }\n\n    return (\n        <div className='display-box'>\n            <div className='col'>\n                <div className='row'>\n                    <div className='col lang-text'> \n                     <p> Two-character language code:</p>\n                    </div>\n                    <div className='col lang-box'>\n                        <input type='text' value={tb1} onChange={(e) => {setTb1(e.target.value)}}></input>\n                    </div>\n                    <div className='col'>\n                        <button className='button-search' onClick={fetch_lang}> Search</button>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col key-text'> \n                     <p> Keyword search:</p>\n                    </div>\n                    <div className='col key-box'>\n                        <input type='text' value={tb2} onChange={(e) => {setTb2(e.target.value)}}></input>\n                    </div>\n                    <div className='col'>\n                        <button className='button-search' onClick={fetch_key}> Search</button>\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className='col id-text'> \n                     <p> Lookup by ID:</p>\n                    </div>\n                    <div className='col id-box'>\n                        <input type='text' value={tb3} onChange={(e) => {setTb3(e.target.value)}}></input>\n                    </div>\n                    <div className='col'>\n                        <button className='button-search' onClick={fetch_id}> Search</button>\n                    </div>\n                </div>\n                <div>\n                    <button className='button-random' onClick={fetch_lucky}> I'm Feeling Lucky</button>\n                </div>\n                <div className='book-data'>\n                    <p><strong>Title:</strong> {title}</p>\n                    <p><strong>ID:</strong> {id}</p>\n                    <p><strong>Subjects:</strong> {subjects}</p>\n                    <p><strong>Authors:</strong> {authors}</p>\n                    <p><strong>Translators:</strong> {translators}</p>\n                    <p><strong>Bookshelves:</strong> {bookshelves}</p>\n                    <p><strong>Languages:</strong> {languages}</p>\n                    <p><strong>Copyright:</strong> {copyright}</p>\n                    <p><strong>Media Type:</strong> {media_type}</p>\n                    <p><strong>Download Count:</strong> {download_count}</p>\n                    <p><strong>Link:</strong> {link}</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default BookDisplay;","import React, {useState} from 'react';\nimport Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\nimport \"./Header.css\";\n\nconst Header = ({ }) => {\n    return (\n        <div className='title-box'>\n            <div className='row'>\n                <div className='col box-1'>\n                    <p className='title-1'> Lit</p>\n                </div>\n                <div className='col box-2'>\n                    <p className='title-2'>erary Collector</p>\n                </div>\n            </div>\n            <div className='row desc'>\n                <p>Find a new cultural classic with Project Gutenberg</p>\n            </div>\n            <div className='row info'>\n                <Popup className='popup' trigger={<button className='button-info'>How it works</button>}>\n                    {close => (\n                        <div>\n                            <p>Choose a language, enter keywords or an ID, or randomize \n                                to recieve a classic book suggestion! </p>\n                            <div>\n                                <button className='button-close' onClick=\n                                    {() => close()}>\n                                        OK\n                                </button>\n                            </div>\n                        </div>\n                    )}\n                </Popup>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;","import './App.css';\nimport BookDisplay from './components/BookDisplay';\nimport Header from './components/Header';\nimport React, { useState } from 'react';\n\nfunction App() {\n  return (\n    <div className='parent'>\n      <div>\n        <div>{<Header></Header>}</div>\n        <div>{<BookDisplay></BookDisplay>}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}